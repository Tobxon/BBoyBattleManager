//--------------------------------------------------------------------------------------------------
/**
 * \brief Module Interface Unit for the Participant class.
 *
 */


//--------------------------------------------------------------------------------------------------
//------ GLOBAL MODULE FRAGMENT                                                               ------
//--------------------------------------------------------------------------------------------------
module;


//--------------------------------------------------------------------------------------------------
//------ MODULE CONTENT                                                                       ------
//--------------------------------------------------------------------------------------------------
export module b3m.common:participant;


//--------------------------------------------------------------------------------------------------
//------ Dependencies                                                                         ------
//--------------------------------------------------------------------------------------------------
import <string>;
import <map>;


//--------------------------------------------------------------------------------------------------
//------ Declarations                                                                         ------
//--------------------------------------------------------------------------------------------------
namespace b3m::common
{



export class Participant
{
public:
	using name_t = std::string;

	virtual ~Participant() = default;
	Participant(const name_t&);

	name_t getName() const { return m_name; }
private:
	name_t m_name;
};

export using ParticipantName = std::string;
export using Attribute = std::string;
export using ParticipantAttributes = std::map< Attribute, std::string >;



} //namespace b3m::common


//END OF FILE --------------------------------------------------------------------------------------